name: Release management

on:
  pull_request:
    types:
      - closed
    branches:
      - 'master'

jobs:
  if_merged:
    name: Build & Publish to NPM
    if: github.event.pull_request.merged == true && (contains(github.event.pull_request.labels.*.name, 'SemVer.Major') || contains(github.event.pull_request.labels.*.name, 'SemVer.Minor') || contains(github.event.pull_request.labels.*.name, 'SemVer.Patch'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: git config --global user.email "dev@icure.com"
      - run: git config --global user.name "iCure"
      - name: Setup Node ‚öôÔ∏è
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies, test and build üîß
        run: yarn install && yarn run test && yarn run build
        env:
          ICURE_TS_TEST_URL: "https://kraken.icure.dev/rest/v1"
          ICURE_TS_TEST_MSG_GTW_URL: "https://mock.icure.dev"
          ICURE_TS_TEST_MSG_GTW_SPEC_ID: "ic"
          ICURE_TS_TEST_HCP_AUTH_PROCESS_ID: ${{ secrets.TEST_HCP_AUTH_PROCESS_ID }}
          ICURE_TS_TEST_PAT_AUTH_PROCESS_ID: ${{ secrets.TEST_PAT_AUTH_PROCESS_ID }}
          ICURE_TS_TEST_AUTH_PROCESS_HCP_ID: "80a5e4de-97be-4b2b-848c-247bea8fcae2"
          ICURE_TS_TEST_RAPID_API_KEY: ${{ secrets.TEST_RAPID_API_KEY }}
          ICURE_TS_TEST_HCP_USER: ${{ secrets.TEST_HCP_USER }}
          ICURE_TS_TEST_HCP_PWD: ${{ secrets.TEST_HCP_PWD }}
          ICURE_TS_TEST_HCP_PRIV_KEY: ${{ secrets.TEST_HCP_PRIV_KEY }}
          ICURE_TS_TEST_PAT_USER: ${{ secrets.TEST_PAT_USER }}
          ICURE_TS_TEST_PAT_PWD: ${{ secrets.TEST_PAT_PWD }}
          ICURE_TS_TEST_PAT_PRIV_KEY: ${{ secrets.TEST_PAT_PRIV_KEY }}
          ICURE_TS_TEST_HCP_2_USER: ${{ secrets.TEST_HCP_2_USER }}
          ICURE_TS_TEST_HCP_2_PWD: ${{ secrets.TEST_HCP_2_PWD }}
          ICURE_TS_TEST_HCP_2_PRIV_KEY: ${{ secrets.TEST_HCP_2_PRIV_KEY }}
          ICURE_TS_TEST_HCP_3_USER: ${{ secrets.TEST_HCP_3_USER }}
          ICURE_TS_TEST_HCP_3_PWD: ${{ secrets.TEST_HCP_3_PWD }}
          ICURE_TS_TEST_HCP_3_PRIV_KEY: ${{ secrets.TEST_HCP_3_PRIV_KEY }}
      - name: Creation new version (Major) üè∑Ô∏è
        if: ${{ contains(github.event.pull_request.labels.*.name, 'SemVer.Major') }}
        run: yarn version --major
      - name: Creation new version (Minor) üè∑Ô∏è
        if: ${{ contains(github.event.pull_request.labels.*.name, 'SemVer.Minor') }}
        run: yarn version --minor
      - name: Creation new version (Patch) üè∑Ô∏è
        if: ${{ contains(github.event.pull_request.labels.*.name, 'SemVer.Patch') }}
        run: yarn version --patch
      - name: Push commit and tag ‚ÜóÔ∏è
        run: git push --follow-tags
      - name: Set LATEST_TAG environment variable ‚öôÔ∏è
        run: |
          latestTag="$(gh api  -H "Accept: application/vnd.github+json" /repos/icure/icure-medical-device-js-sdk/tags --jq '.[0].name')"

          echo 'LATEST_TAG='$latestTag >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package on NPM üì¶
        run: yarn run prepare && cd dist && yarn publish --no-git-tag-version --new-version $LATEST_TAG
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  release_note:
    name: Release note
    needs: [ if_merged ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set LATEST_TAG environment variable ‚öôÔ∏è
        run: |
          latestTag="$(gh api  -H "Accept: application/vnd.github+json" /repos/icure/icure-medical-device-js-sdk/tags --jq '.[0].name')"

          echo 'LATEST_TAG='$latestTag >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a release üìù
        run: gh api --method POST /repos/icure/icure-medical-device-js-sdk/releases -f tag_name="$LATEST_TAG" -f target_commitish="master" -f name="$LATEST_TAG" -F draft=false -F generate_release_notes=true -F prerelease=false
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
