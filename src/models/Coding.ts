/**
 * ICure Medical Device Micro Service
 * ICure Medical Device Micro Service
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class Coding {
constructor(json: ICoding) {
  const { searchTerms, ...simpleProperties } = json
  Object.assign(this as Coding, simpleProperties as ICoding)
  this.searchTerms = searchTerms ? Object.entries(searchTerms).map(([k,v]) => [k, new Set([...v])] as [string, Set<string>]).reduce((acc, [k,v]) => ({...acc, [k]: v}), {}) : {} as any
}

    /**
    * the Id of the coding. We encourage using either a v4 UUID or a HL7 Id.
    */
    'id'?: string;
    /**
    * the revision of the coding in the database, used for conflict management / optimistic locking.
    */
    'rev'?: string;
    'type'?: string;
    'code'?: string;
    /**
    * Must be lexicographically searchable
    */
    'version'?: string;
    'regions'?: Array<string>;
    /**
    * Description (ex: {en: Rheumatic Aortic Stenosis, fr: Sténose rhumatoïde de l'Aorte})
    */
    'description'?: { [key: string]: string; };
    /**
    * Links towards related codes
    */
    'qualifiedLinks': { [key: string]: Array<string>; };
    /**
    * Extra search terms/ language
    */
    'searchTerms': { [key: string]: Set<string>; };

    marshal(): ICoding {
      return {
        ...this,
        searchTerms: Object.entries(this.searchTerms).map(([k,v]) => [k, [...v]] as [string, Array<string>]).reduce((acc, [k,v]) => ({...acc, [k]: v}), {}) as any,
      }
    }
}

interface ICoding {
  'id'?: string;
  'rev'?: string;
  'type'?: string;
  'code'?: string;
  'version'?: string;
  'regions'?: Array<string>;
  'description'?: { [key: string]: string; };
  'qualifiedLinks'?: { [key: string]: Array<string>; };
  'searchTerms'?: { [key: string]: Set<string>; };
}
