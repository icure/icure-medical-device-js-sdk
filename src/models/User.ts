/**
 * ICure Medical Device Micro Service
 * ICure Medical Device Micro Service
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {AuthenticationToken} from './AuthenticationToken';
import {Property} from './Property';

export class User {
constructor(json: IUser) {
  Object.assign(this as User, json)
}

    /**
    * the Id of the user. We encourage using either a v4 UUID or a HL7 Id.
    */
    'id'?: string;
    /**
    * the revision of the user in the database, used for conflict management / optimistic locking.
    */
    'rev'?: string;
    /**
    * the soft delete timestamp. When a user is ”deleted“, this is set to a non null value: the moment of the deletion
    */
    'deletionDate'?: number;
    /**
    * the creation date of the user (encoded as epoch).
    */
    'created'?: number;
    /**
    * Last name of the user. This is the official last name that should be used for official administrative purposes.
    */
    'name'?: string;
    /**
    * Extra properties for the user. Those properties are typed (see class Property)
    */
    'properties': Set<Property>;
    /**
    * Roles assigned to this user
    */
    'roles': Set<string>;
    /**
    * Username for this user. We encourage using an email address
    */
    'login'?: string;
    /**
    * Hashed version of the password (BCrypt is used for hashing)
    */
    'passwordHash'?: string;
    /**
    * Secret token used to verify 2fa
    */
    'secret'?: string;
    /**
    * Whether the user has activated two factors authentication
    */
    'use2fa'?: boolean;
    /**
    * id of the group (practice/hospital) the user is member of
    */
    'groupId'?: string;
    /**
    * Id of the healthcare party if the user is a healthcare party.
    */
    'healthcarePartyId'?: string;
    /**
    * Id of the patient if the user is a patient
    */
    'patientId'?: string;
    /**
    * Id of the patient if the user is a patient
    */
    'deviceId'?: string;
    /**
    * Delegations that are automatically generated client side when a new database object is created by this user
    */
    'autoDelegations': { [key: string]: Set<string>; };
    /**
    * email address of the user (used for token exchange or password recovery).
    */
    'email'?: string;
    /**
    * mobile phone of the user (used for token exchange or password recovery).
    */
    'mobilePhone'?: string;
    /**
    * Encrypted and time-limited Authentication tokens used for inter-applications authentication
    */
    'authenticationTokens': { [key: string]: AuthenticationToken; };

}

interface IUser {
  'id'?: string;
  'rev'?: string;
  'deletionDate'?: number;
  'created'?: number;
  'name'?: string;
  'properties'?: Set<Property>;
  'roles'?: Set<string>;
  'login'?: string;
  'passwordHash'?: string;
  'secret'?: string;
  'use2fa'?: boolean;
  'groupId'?: string;
  'healthcarePartyId'?: string;
  'patientId'?: string;
  'deviceId'?: string;
  'autoDelegations'?: { [key: string]: Set<string>; };
  'email'?: string;
  'mobilePhone'?: string;
  'authenticationTokens'?: { [key: string]: AuthenticationToken; };
}

